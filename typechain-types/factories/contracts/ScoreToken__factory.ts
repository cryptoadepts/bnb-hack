/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ScoreToken,
  ScoreTokenInterface,
} from "../../contracts/ScoreToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200106f3803806200106f8339810160408190526200003491620000fd565b6040805180820190915260038082526229a1a960e91b60208301528291906200005e838262000261565b5060046200006d828262000261565b5050506200008a620000846200009160201b60201c565b62000095565b506200032d565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200011157600080fd5b82516001600160401b03808211156200012957600080fd5b818501915085601f8301126200013e57600080fd5b815181811115620001535762000153620000e7565b604051601f8201601f19908116603f011681019083821181831017156200017e576200017e620000e7565b8160405282815288868487010111156200019757600080fd5b600093505b82841015620001bb57848401860151818501870152928501926200019c565b600086848301015280965050505050505092915050565b600181811c90821680620001e757607f821691505b6020821081036200020857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025c57600081815260208120601f850160051c81016020861015620002375750805b601f850160051c820191505b81811015620002585782815560010162000243565b5050505b505050565b81516001600160401b038111156200027d576200027d620000e7565b62000295816200028e8454620001d2565b846200020e565b602080601f831160018114620002cd5760008415620002b45750858301515b600019600386901b1c1916600185901b17855562000258565b600085815260208120601f198616915b82811015620002fe57888601518255948401946001909101908401620002dd565b50858210156200031d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610d32806200033d6000396000f3fe608060405234801561001057600080fd5b50600436106100d05760003560e01c806306fdde03146100d5578063095ea7b3146100f357806318160ddd1461011657806323b872dd14610128578063313ce5671461013b578063395093511461014a57806340c10f191461015d57806370a0823114610172578063715018a61461019b5780638da5cb5b146101a357806395d89b41146101c35780639dc29fac146101cb578063a457c2d7146101de578063a9059cbb146101f1578063dd62ed3e14610204578063f2fde38b14610217575b600080fd5b6100dd61022a565b6040516100ea9190610b41565b60405180910390f35b610106610101366004610bab565b6102bc565b60405190151581526020016100ea565b6002545b6040519081526020016100ea565b610106610136366004610bd5565b6102d6565b604051601281526020016100ea565b610106610158366004610bab565b6102fa565b61017061016b366004610bab565b61031c565b005b61011a610180366004610c11565b6001600160a01b031660009081526020819052604090205490565b610170610332565b6101ab610346565b6040516001600160a01b0390911681526020016100ea565b6100dd610355565b6101706101d9366004610bab565b610364565b6101066101ec366004610bab565b610376565b6101066101ff366004610bab565b6103f6565b61011a610212366004610c33565b610404565b610170610225366004610c11565b61042f565b60606003805461023990610c66565b80601f016020809104026020016040519081016040528092919081815260200182805461026590610c66565b80156102b25780601f10610287576101008083540402835291602001916102b2565b820191906000526020600020905b81548152906001019060200180831161029557829003601f168201915b5050505050905090565b6000336102ca8185856104a8565b60019150505b92915050565b6000336102e48582856105cd565b6102ef858585610647565b506001949350505050565b6000336102ca81858561030d8383610404565b6103179190610cb6565b6104a8565b61032461080e565b61032e828261086d565b5050565b61033a61080e565b6103446000610946565b565b6005546001600160a01b031690565b60606004805461023990610c66565b61036c61080e565b61032e8282610998565b600033816103848286610404565b9050838110156103e95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102ef82868684036104a8565b6000336102ca818585610647565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61043761080e565b6001600160a01b03811661049c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103e0565b6104a581610946565b50565b6001600160a01b03831661050a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103e0565b6001600160a01b03821661056b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103e0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105d98484610404565b9050600019811461064157818110156106345760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103e0565b61064184848484036104a8565b50505050565b6001600160a01b0383166106ab5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103e0565b6001600160a01b03821661070d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e0565b610718838383610add565b6001600160a01b038316600090815260208190526040902054818110156107905760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103e0565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107c7908490610cb6565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610cdd8339815191528460405161080191815260200190565b60405180910390a3610641565b33610817610346565b6001600160a01b0316146103445760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e0565b6001600160a01b0382166108c35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103e0565b6108cf60008383610add565b80600260008282546108e19190610cb6565b90915550506001600160a01b0382166000908152602081905260408120805483929061090e908490610cb6565b90915550506040518181526001600160a01b03831690600090600080516020610cdd8339815191529060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166109f85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103e0565b610a0482600083610add565b6001600160a01b03821660009081526020819052604090205481811015610a785760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103e0565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610aa7908490610cc9565b90915550506040518281526000906001600160a01b03851690600080516020610cdd833981519152906020016105c0565b505050565b6001600160a01b0383161580610afa57506001600160a01b038216155b610ad85760405162461bcd60e51b81526020600482015260186024820152774f6e6c79206d696e74696e6720616e64206275726e696e6760401b60448201526064016103e0565b600060208083528351808285015260005b81811015610b6e57858101830151858201604001528201610b52565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610ba657600080fd5b919050565b60008060408385031215610bbe57600080fd5b610bc783610b8f565b946020939093013593505050565b600080600060608486031215610bea57600080fd5b610bf384610b8f565b9250610c0160208501610b8f565b9150604084013590509250925092565b600060208284031215610c2357600080fd5b610c2c82610b8f565b9392505050565b60008060408385031215610c4657600080fd5b610c4f83610b8f565b9150610c5d60208401610b8f565b90509250929050565b600181811c90821680610c7a57607f821691505b602082108103610c9a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102d0576102d0610ca0565b818103818111156102d0576102d0610ca056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212207878c9c9e94fd6e4cada813b620f38bec680f1504e84d889d5efd675d219087464736f6c63430008110033";

type ScoreTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScoreTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScoreToken__factory extends ContractFactory {
  constructor(...args: ScoreTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ScoreToken> {
    return super.deploy(_name, overrides || {}) as Promise<ScoreToken>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, overrides || {});
  }
  override attach(address: string): ScoreToken {
    return super.attach(address) as ScoreToken;
  }
  override connect(signer: Signer): ScoreToken__factory {
    return super.connect(signer) as ScoreToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScoreTokenInterface {
    return new utils.Interface(_abi) as ScoreTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ScoreToken {
    return new Contract(address, _abi, signerOrProvider) as ScoreToken;
  }
}
